// Code generated by MockGen. DO NOT EDIT.
// Source: test2.go

// Package mock_test is a generated GoMock package.
package mock_test

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MocktestInterface is a mock of testInterface interface.
type MocktestInterface struct {
	ctrl     *gomock.Controller
	recorder *MocktestInterfaceMockRecorder
}

// MocktestInterfaceMockRecorder is the mock recorder for MocktestInterface.
type MocktestInterfaceMockRecorder struct {
	mock *MocktestInterface
}

// NewMocktestInterface creates a new mock instance.
func NewMocktestInterface(ctrl *gomock.Controller) *MocktestInterface {
	mock := &MocktestInterface{ctrl: ctrl}
	mock.recorder = &MocktestInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocktestInterface) EXPECT() *MocktestInterfaceMockRecorder {
	return m.recorder
}

// GetTest mocks base method.
func (m *MocktestInterface) GetTest() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTest")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetTest indicates an expected call of GetTest.
func (mr *MocktestInterfaceMockRecorder) GetTest() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTest", reflect.TypeOf((*MocktestInterface)(nil).GetTest))
}

// SetTest mocks base method.
func (m *MocktestInterface) SetTest(num int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetTest", num)
}

// SetTest indicates an expected call of SetTest.
func (mr *MocktestInterfaceMockRecorder) SetTest(num interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTest", reflect.TypeOf((*MocktestInterface)(nil).SetTest), num)
}
